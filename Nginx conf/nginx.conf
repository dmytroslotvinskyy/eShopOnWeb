events {
	worker_connections 20000;
}

http {

    upstream eshoponweb {
      ip_hash;
      server host.docker.internal:5106 weight=100 max_fails=5 fail_timeout=300;
      server host.docker.internal:5107 weight=100 max_fails=5 fail_timeout=300;
      server host.docker.internal:5108 weight=100 max_fails=5 fail_timeout=300;
      server host.docker.internal:5109 weight=100 max_fails=5 fail_timeout=300;
      server host.docker.internal:5110 weight=100 max_fails=5 fail_timeout=300; 
   
    }
 map $http_connection $connection_upgrade {
          "~*Upgrade" $http_connection;
             default keep-alive;
}

    server {
        listen 80;
        server_name     $hostname;
        location /{
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_set_header X-Real_IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;

        # This is necessary to pass the correct IP to be hashed
        real_ip_header X-Real-IP;

        proxy_pass http://eshoponweb;
        proxy_redirect off;   
        }
    }
}
